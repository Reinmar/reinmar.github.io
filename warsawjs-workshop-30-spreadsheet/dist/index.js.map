{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/toby.js","webpack:///./src/data-provider.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ROW_HEIGHT","COLUMN_WIDTH","BORDER_WIDTH","PRELOAD_ROWS","Toby","[object Object]","dataSource","this","firstRenderedRow","Number","MAX_SAFE_INTEGER","lastRenderedRow","_sentinel","_createSentinelElement","_sentinelPosition","_renderedRowElements","container","statusBar","cellStatusElement","querySelector","render","appendChild","callback","onChange","getViewport","addEventListener","observeScrollableViewport","innerHTML","visibleRows","viewport","fullRowHeight","first","Math","floor","top","last","bottom","getVisibleRowRange","_update","rowsToRender","firstToRender","max","lastToRender","start","min","end","row","rowElement","_renderRow","remove","_updateSentinel","_createRowElement","col","numberOfColumns","getItem","childNodes","document","createElement","classList","add","dataset","style","transform","_createCellElement","cellElement","height","width","_setCellStatusTo","parentNode","sentinelElement","assign","position","lastRow","stretchToRow","scrollTop","offsetHeight","AVAILABLE_COLUMNS","keys","data_set_1000","__webpack_exports__","initToby","destroyToby","COLUMN_SETS","concat","slice","chosenColumnSet","location","hash","dataProvider","complexityFactor","displayColumns","length","columnName","startsWith","b","result","complexity","abs","tan","computeSomeComplexFormula","toby","console","error","attachTo","destroy"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* global document, window */\n\nconst ROW_HEIGHT = 30;\nconst COLUMN_WIDTH = 120;\nconst BORDER_WIDTH = 1;\nconst PRELOAD_ROWS = 5;\n\nexport default class Toby {\n\t/**\n\t * @param {DataSource} dataSource\n\t */\n\tconstructor( dataSource ) {\n\t\t/**\n\t\t * @type {DataSource}\n\t\t */\n\t\tthis.dataSource = dataSource;\n\n\t\t/**\n\t\t * The first row which is currently in the DOM.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.firstRenderedRow = Number.MAX_SAFE_INTEGER;\n\n\t\t/**\n\t\t * The last row which is currently in the DOM.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.lastRenderedRow = -1;\n\n\t\t/**\n\t\t * The sentinel element – guards the scroll size by stretching the container.\n\t\t *\n\t\t * @type {Element}\n\t\t */\n\t\tthis._sentinel = this._createSentinelElement();\n\n\t\t/**\n\t\t * The current sentinel's position from the top of the container.\n\t\t */\n\t\tthis._sentinelPosition = 0;\n\n\t\t/**\n\t\t * The array of row elements which are currently in the DOM.\n\t\t *\n\t\t * @type {Array.<Element>}\n\t\t */\n\t\tthis._renderedRowElements = [];\n\t}\n\n\t/**\n\t * Attaches this toby instance to the given elements.\n\t */\n\tattachTo( { container, statusBar } ) {\n\t\tthis.container = container;\n\t\tthis.cellStatusElement = statusBar.querySelector( '.status-bar__current-cell' );\n\n\t\tthis.render();\n\n\t\tcontainer.appendChild( this._sentinel );\n\n\t\tobserveScrollableViewport( container, () => this.render() );\n\t}\n\n\t/**\n\t * Detaches this toby instance.\n\t */\n\tdestroy() {\n\t\tthis.container.innerHTML = '';\n\t}\n\n\t/**\n\t * Updates the list of rows which should be rendered based on the current viewport position.\n\t */\n\trender() {\n\t\tconst visibleRows = getVisibleRowRange( getViewport( this.container ) );\n\n\t\tthis._update( visibleRows );\n\t}\n\n\t/**\n\t * Renders missing rows and removes excessive rows.\n\t *\n\t * @param {Array.<Number>} rowsToRender Rows which should currently be rendered.\n\t */\n\t_update( rowsToRender ) {\n\t\tconst firstRenderedRow = this.firstRenderedRow;\n\t\tconst lastRenderedRow = this.lastRenderedRow;\n\n\t\t// The visible range of of rows extended with the given number of rows \"beyond the fold\".\n\t\t// This is – there should always be a couple of rows outside of the viewport so the user\n\t\t// doesn't see that they are being rendered as he/she scrolls.\n\t\tconst firstToRender = Math.max( 0, rowsToRender.first - PRELOAD_ROWS );\n\t\tconst lastToRender = Math.max( 0, rowsToRender.last + PRELOAD_ROWS );\n\n\t\t// Update the rows from the first one which should be added or removed\n\t\t// to the last one which should be added or removed.\n\t\tconst start = Math.min( firstRenderedRow, firstToRender );\n\t\tconst end = Math.max( lastRenderedRow, lastToRender );\n\n\t\tfor ( let row = start; row <= end; row++ ) {\n\t\t\tif ( row >= firstToRender && row <= lastToRender ) {\n\t\t\t\t// If the current row should be rendered (in the DOM) but isn't present in the\n\t\t\t\t// table of rendered rows (wasn't rendered so far), render it.\n\t\t\t\tif ( !this._renderedRowElements[ row ] ) {\n\t\t\t\t\tconst rowElement = this._renderRow( row );\n\n\t\t\t\t\tthis.container.appendChild( rowElement );\n\n\t\t\t\t\tthis._renderedRowElements[ row ] = rowElement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If the current row should not be rendered but is currently rendered, remove it from the DOM.\n\t\t\t\tif ( this._renderedRowElements[ row ] ) {\n\t\t\t\t\tthis._renderedRowElements[ row ].remove();\n\t\t\t\t\tthis._renderedRowElements[ row ] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.firstRenderedRow = firstToRender;\n\t\tthis.lastRenderedRow = lastToRender;\n\n\t\tthis._updateSentinel( lastToRender );\n\t}\n\n\t/**\n\t * Creates a row element and fills the cells inside it with the data of this row.\n\t *\n\t * @param {Number} row The number of the row to render.\n\t * @returns {Element} The rendered row element.\n\t */\n\t_renderRow( row ) {\n\t\tconst rowElement = this._createRowElement( row );\n\n\t\tfor ( let col = 0; col < this.dataSource.numberOfColumns; col++ ) {\n\t\t\tconst value = this.dataSource.getItem( row, col );\n\n\t\t\trowElement.childNodes[ col ].innerHTML = value;\n\t\t}\n\n\t\treturn rowElement;\n\t}\n\n\t/**\n\t * Creates a row element and all its cells.\n\t *\n\t * @param {Number} row The number of the row to create.\n\t * @returns {Element} The rendered row element (with empty cells).\n\t */\n\t_createRowElement( row ) {\n\t\tconst rowElement = document.createElement( 'div' );\n\n\t\trowElement.classList.add( 'row' );\n\t\trowElement.dataset.row = row;\n\t\trowElement.style.transform = `translateY(${ row * ( ROW_HEIGHT + BORDER_WIDTH ) }px)`;\n\n\t\tfor ( let col = 0; col < this.dataSource.numberOfColumns; col++ ) {\n\t\t\trowElement.appendChild( this._createCellElement( col ) );\n\t\t}\n\n\t\treturn rowElement;\n\t}\n\n\t/**\n\t * Creates a cell element.\n\t *\n\t * @param {Number} row The number of the row to render\n\t * @returns {Element} The rendered row element (with empty cells).\n\t */\n\t_createCellElement( col ) {\n\t\tconst cellElement = document.createElement( 'div' );\n\n\t\tcellElement.classList.add( 'cell' );\n\t\tcellElement.dataset.col = col;\n\t\tcellElement.style.transform = `translateX(${ col * ( COLUMN_WIDTH + BORDER_WIDTH ) }px)`;\n\t\tcellElement.style.height = ROW_HEIGHT + 'px';\n\t\tcellElement.style.width = COLUMN_WIDTH + 'px';\n\n\t\tcellElement.addEventListener( 'mouseenter', () => {\n\t\t\tthis._setCellStatusTo( cellElement.parentNode.dataset.row, col );\n\t\t} );\n\t\tcellElement.addEventListener( 'mouseleave', () => {\n\t\t\tthis._setCellStatusTo( null );\n\t\t} );\n\n\t\treturn cellElement;\n\t}\n\n\t_createSentinelElement() {\n\t\tconst sentinelElement = document.createElement( 'div' );\n\n\t\tObject.assign( sentinelElement.style, {\n\t\t\tposition: 'absolute',\n\t\t\theight: '1px',\n\t\t\twidth: '1px'\n\t\t} );\n\n\t\treturn sentinelElement;\n\t}\n\n\t_setCellStatusTo( row, col ) {\n\t\tif ( row === null ) {\n\t\t\tthis.cellStatusElement.innerHTML = '';\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellStatusElement.innerHTML = `row: ${ row }, col: ${ col }, data: ${ this.dataSource.getItem( row, col ) }`;\n\t}\n\n\t/**\n\t * Updates the sentinel's position to be 5 rows below the last rendered row.\n\t * Thanks to that there's always space for the scroll to move.\n\t */\n\t_updateSentinel( lastRow ) {\n\t\tconst stretchToRow = lastRow + 5;\n\n\t\tif ( stretchToRow > this._sentinelPosition ) {\n\t\t\t// Theoretically, setting transform should work fine, but\n\t\t\t// it didn't work in some (random) cases. Seemed to be a Blink's bug.\n\t\t\t// this._sentinel.style.transform = `translateY(${ stretchToRow * ( ROW_HEIGHT + BORDER_WIDTH ) }px)`;\n\n\t\t\tthis._sentinel.style.top = `${ stretchToRow * ( ROW_HEIGHT + BORDER_WIDTH ) }px`;\n\n\t\t\tthis._sentinelPosition = stretchToRow;\n\t\t}\n\t}\n}\n\n/**\n * Observes the given scrollable element for changes in its viewport (the visible part of its content).\n *\n * @param {Element} container Scrollable container.\n * @param {Function} callback The function to call when the viewport changes.\n */\nfunction observeScrollableViewport( container, callback ) {\n\tcontainer.addEventListener( 'scroll', onChange );\n\twindow.addEventListener( 'resize', onChange );\n\n\tfunction onChange() {\n\t\tcallback( getViewport( container ) );\n\t}\n}\n\n/**\n * Gets the viewport position (the visible part of the given container element's content).\n *\n *\t\t// The below means that the visible part of the element\n *\t\t// starts at position 100px from its top to 500px from its top.\n *\t\tgetViewport( container ); // -> { top: 100, bottom: 500 }\n *\n * @param {Element} container Scrollable container.\n * @returns {Object} The viewport position (its top and bottom positions in pixels).\n */\nfunction getViewport( container ) {\n\treturn {\n\t\ttop: container.scrollTop,\n\t\tbottom: container.scrollTop + container.offsetHeight\n\t};\n}\n\n/**\n * Calculates the first and last rows visible in the given viewport.\n *\n * @param {Object} viewport\n * @returns {OBject} The first and last visible rows.\n */\nfunction getVisibleRowRange( viewport ) {\n\tconst fullRowHeight = ROW_HEIGHT + BORDER_WIDTH;\n\n\tconst first = Math.floor( viewport.top / fullRowHeight );\n\tconst last = Math.floor( viewport.bottom / fullRowHeight );\n\n\treturn { first, last };\n}\n","import dataSet from '../vendor/data-set-1000.json';\n\nexport const AVAILABLE_COLUMNS = Object.keys( dataSet[ 0 ] );\n\n/**\n * @param {Array.<String>} displayColumns Names of columns to display.\n * @param {Number} complexityFactor How long should the formula computations take.\n * @returns {DataSource}\n */\nexport function createDataProvider( displayColumns, complexityFactor ) {\n\t/**\n\t * @typedef DataSource\n\t */\n\treturn {\n\t\t/**\n\t\t * Number of columns to display.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tnumberOfColumns: displayColumns.length,\n\n\t\t/**\n\t\t * Returns the item value at the given position.\n\t\t *\n\t\t * @param {Number} row\n\t\t * @param {Number} col\n\t\t * @returns {*} This item value.\n\t\t */\n\t\tgetItem( row, col ) {\n\t\t\tif ( row == 0 ) {\n\t\t\t\treturn displayColumns[ col ];\n\t\t\t}\n\n\t\t\tconst columnName = displayColumns[ col ];\n\n\t\t\tif ( columnName.startsWith( 'formula_' ) ) {\n\t\t\t\treturn computeSomeComplexFormula( row, col, complexityFactor );\n\t\t\t}\n\n\t\t\treturn dataSet[ row - 1 ][ columnName ];\n\t\t}\n\t};\n}\n\nfunction computeSomeComplexFormula( a, b, complexityFactor ) {\n\tlet result = 0;\n\n\t// Seeded pseudorandom value (giving repeatable results) between 0 and 1000.\n\tconst randomBetween0And1000 = Math.abs( Math.min( 1000, Math.tan( a ) * Math.tan( b ) ) );\n\tconst complexity = randomBetween0And1000 * complexityFactor;\n\n\tfor ( let i = 0; i < complexity; i++ ) {\n\t\tresult += Math.tan( i );\n\t}\n\n\treturn result;\n}\n","/* global window, document, console */\n\nimport Toby from './toby';\nimport { createDataProvider, AVAILABLE_COLUMNS } from './data-provider';\n\n// ----------------------------------------------------------------------------\n// Create a data provider.\n\n// The standard set of 38 columns.\nconst DISPLAY_COLUMNS_1 = AVAILABLE_COLUMNS; // eslint-disable-line no-unused-vars\n\n// A huge number of columns (10*38).\n// However, columns over 38+ are hidden via CSS\n// (to underline the DOM creation footprint, not painting).\nconst DISPLAY_COLUMNS_2 = AVAILABLE_COLUMNS // eslint-disable-line no-unused-vars\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS )\n\t.concat( AVAILABLE_COLUMNS );\n\n// A small set of 13 columns.\n// However, with 3 complex formulas which need to be calculated.\nconst COMPLEXITY_FACTOR = 99;\nconst DISPLAY_COLUMNS_3 = AVAILABLE_COLUMNS // eslint-disable-line no-unused-vars\n\t.slice( 0, 10 )\n\t.concat( [ 'formula_1', 'formula_2', 'formula_3' ] );\n\n// Use the column set defined in the URL by the hash (#0 - #2).\nconst COLUMN_SETS = [ DISPLAY_COLUMNS_1, DISPLAY_COLUMNS_2, DISPLAY_COLUMNS_3 ];\nconst chosenColumnSet = Number( window.location.hash.slice( 1 ) );\n\nconst dataProvider = createDataProvider( COLUMN_SETS[ chosenColumnSet ], COMPLEXITY_FACTOR );\n\nwindow.dataProvider = dataProvider;\n\n// ----------------------------------------------------------------------------\n// Initialize Toby.\n\nexport function initToby() {\n\tif ( window.toby ) {\n\t\tconsole.error( 'Cannot init Toby. Toby is already initialized.' );\n\n\t\treturn;\n\t}\n\n\tconst toby = new Toby( dataProvider );\n\n\ttoby.attachTo( {\n\t\tstatusBar: document.querySelector( '.status-bar' ),\n\t\tcontainer: document.querySelector( '.container' )\n\t} );\n\n\twindow.toby = toby;\n}\n\nexport function destroyToby() {\n\tif ( !window.toby ) {\n\t\tconsole.error( 'Cannot destroy Toby. Toby wasn\\'t yet initialized.' );\n\n\t\treturn;\n\t}\n\n\twindow.toby.destroy();\n\n\tdelete window.toby;\n}\n\ninitToby();\n"],"sourceRoot":""}